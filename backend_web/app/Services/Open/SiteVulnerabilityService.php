<?php
/**
 * @author Eduardo Acevedo Farje.
 * @link www.eduardoaf.com
 * @name SiteVulnerabilityService
 * @file SiteVulnerabilityService.php
 * @version 1.0.0
 * @date 10-01-2021 12:44
 * @observations
 */
namespace App\Services\Open;

use App\Component\FetchComponent as Fetch;
use App\Services\BaseService;

class SiteVulnerabilityService extends BaseService
{
    private $input = [];
    private $endpoints = [];
    private $token = null;

    public function __construct($post=[])
    {
        $this->input["domain"] = trim($post["domain"] ?? "");
    }

    private function _get_fetch($url)
    {
        return (new Fetch($url))
                    //->is_debug()
            ;
    }

    private function _load_endpoints()
    {
        if(!$this->endpoints){
            $url = $this->get_env("API_IPBLOCKER_URL");
            $this->endpoints =[
                "login" =>"$url/security/login",
                "read"  =>"$url/read",
            ];
        }
    }

    private function _is_valid_ip($domain)
    {
        $domain = str_replace(["www.","https://","http://"],"",$domain);
        return filter_var(gethostbyname($domain), FILTER_VALIDATE_IP);
    }

    private function _login()
    {
        if(!$this->token) {
            $urllogin = $this->endpoints["login"];
            $user = $this->get_env("API_IPBLOCKER_USERNAME");
            $password = $this->get_env("API_IPBLOCKER_PASSWORD");
            $this->token = $this->_get_fetch($urllogin)
                ->add_header("origin","http://eduardoaf.com")
                ->add_post("user", $user)
                ->add_post("password", $password)
                ->get_array()["data"]["token"] ?? ""
            ;
            if(!$this->token) new \Exception("No token resolved");
        }
    }

    private function _get_preconfig()
    {
        $urlread = $this->endpoints["read"];
        return $this->_get_fetch($urlread)

            ->add_header("origin", "http://eduardoaf.com")

            ->add_get("context","c6")
            ->add_get("schemainfo","db-ipblocker-ro")

            ->add_post("apify-usertoken", $this->token)

            ->add_post("queryparts[table]","app_ip_request r")
            ->add_post("queryparts[foundrows]",1)
            ->add_post("queryparts[distinct]",1)
            ->add_post("queryparts[fields][0]","request_uri")
            ->add_post("queryparts[orderby][0]", "id DESC")
            ->add_post("queryparts[orderby][1]", "request_uri ASC")
            ->add_post("queryparts[limit][perpage]", 25)
            ->add_post("queryparts[limit][regfrom]", 0);
    }

    private function _exceptions()
    {
        $domain = $this->input["domain"];
        if(!$this->_is_valid_ip($domain)) throw new \Exception("Wrong domain supplied");
        if(!(strstr($domain,"http://") || strstr($domain,"https://")))
            throw new \Exception("missing http or https");
    }

    private function _get_status($str)
    {
        $lines = explode("\n",$str);
        /*
        $lines = array_filter($lines, function ($str){
           return trim($str)!="";
        });
        */
        return $lines[0];
    }

    public function get_test_result()
    {
        $this->_exceptions();

        $domain = $this->input["domain"];
        $hacks = $this->_get_top_wednesday();
        $hacks = array_map(function ($item){
            return $item["request_uri"];
        }, $hacks);

        $r = [];
        foreach ($hacks as $i=>$requri)
        {
            $url = "$domain$requri";
            $headers = $this->_get_fetch($url)
                        //->is_debug()
                        ->add_option(CURLOPT_HEADER,1)
                        ->get();
            $r[] = [
                "hack_uri"      =>$requri,
                "request_uri"   =>$url,
                "status"        =>$this->_get_status($headers)
            ];
        }
        //$this->log($r,"checkvulner");
        return $r;
    }

    private function _get_top_monday()
    {
        $data = $this->_get_preconfig()
            ->add_post("queryparts[where][0]", "domain NOT LIKE '%elchalanaruba.com%'")
            ->add_post("queryparts[where][1]", "domain NOT LIKE '%helpers.theframework.es%'")
            ->add_post("queryparts[where][2]", "(
                        request_uri LIKE '%wp%'
                        AND request_uri NOT LIKE '%.zip%'
                        AND request_uri NOT LIKE '%.rar%'
                    )")
            ->get_array()
        ;
        $r = $data["data"]["result"] ?? [];
        return $r;
    }

    private function _get_top_tuesday()
    {
        $urlread = $this->endpoints["read"];
        $data = $this->_get_fetch($urlread)

            ->add_header("origin", "http://eduardoaf.com")

            ->add_get("context","c6")
            ->add_get("schemainfo","db-ipblocker-ro")

            ->add_post("apify-usertoken", $this->token)

            ->add_post("queryparts[table]","app_ip_request r")
            ->add_post("queryparts[foundrows]",1)
            ->add_post("queryparts[distinct]",1)
            ->add_post("queryparts[fields][0]","request_uri")
            ->add_post("queryparts[where][0]", "domain NOT LIKE '%elchalanaruba.com%'")
            ->add_post("queryparts[where][1]", "domain NOT LIKE '%helpers.theframework.es%'")
            ->add_post("queryparts[where][2]", "(
                        request_uri LIKE '%author%'
                        OR request_uri LIKE '%.php%'
                    )")
            ->add_post("queryparts[orderby][0]", "id DESC")
            ->add_post("queryparts[orderby][1]", "request_uri ASC")
            ->add_post("queryparts[limit][perpage]", 25)
            ->add_post("queryparts[limit][regfrom]", 0)
            //->get()
            ->get_array()
        ;
        $r = $data["data"]["result"] ?? [];
        return $r;
    }

    private function _get_top_wednesday()
    {
        $urlread = $this->endpoints["read"];
        $data = $this->_get_fetch($urlread)

            ->add_header("origin", "http://eduardoaf.com")

            ->add_get("context","c6")
            ->add_get("schemainfo","db-ipblocker-ro")

            ->add_post("apify-usertoken", $this->token)

            ->add_post("queryparts[table]","app_ip_request r")
            ->add_post("queryparts[foundrows]",1)
            ->add_post("queryparts[distinct]",1)
            ->add_post("queryparts[fields][0]","request_uri")
            ->add_post("queryparts[where][2]", "(
                        request_uri LIKE '%.tgz%'
                        OR request_uri LIKE '%.zip%'
                        OR request_uri LIKE '%.rar%'
                        OR request_uri LIKE '%.gz%'
                    )")
            ->add_post("queryparts[orderby][0]", "id DESC")
            ->add_post("queryparts[orderby][1]", "request_uri ASC")
            ->add_post("queryparts[limit][perpage]", 25)
            ->add_post("queryparts[limit][regfrom]", 0)
            //->get()
            ->get_array()
        ;
        $r = $data["data"]["result"] ?? [];
        return $r;
    }

    private function _get_top_thursday()
    {
        $urlread = $this->endpoints["read"];
        $data = $this->_get_fetch($urlread)

            ->add_header("origin", "http://eduardoaf.com")

            ->add_get("context","c6")
            ->add_get("schemainfo","db-ipblocker-ro")

            ->add_post("apify-usertoken", $this->token)

            ->add_post("queryparts[table]","app_ip_request r")
            ->add_post("queryparts[foundrows]",1)
            ->add_post("queryparts[distinct]",1)
            ->add_post("queryparts[fields][0]","request_uri")
            ->add_post("queryparts[where][2]", "(
                        request_uri LIKE '%.back%'
                        OR request_uri LIKE '%.bck%'
                        OR request_uri LIKE '%.env%'
                    )")
            ->add_post("queryparts[orderby][0]", "id DESC")
            ->add_post("queryparts[orderby][1]", "request_uri ASC")
            ->add_post("queryparts[limit][perpage]", 25)
            ->add_post("queryparts[limit][regfrom]", 0)
            //->get()
            ->get_array()
        ;
        $r = $data["data"]["result"] ?? [];
        return $r;
    }

    private function _get_top_friday()
    {
        $urlread = $this->endpoints["read"];
        $data = $this->_get_fetch($urlread)

            ->add_header("origin", "http://eduardoaf.com")

            ->add_get("context","c6")
            ->add_get("schemainfo","db-ipblocker-ro")

            ->add_post("apify-usertoken", $this->token)

            ->add_post("queryparts[table]","app_ip_request r")
            ->add_post("queryparts[foundrows]",1)
            ->add_post("queryparts[distinct]",1)
            ->add_post("queryparts[fields][0]","request_uri")
            ->add_post("queryparts[where][2]", "(
                        request_uri LIKE '%vendor%'
                    )")
            ->add_post("queryparts[orderby][0]", "id DESC")
            ->add_post("queryparts[orderby][1]", "request_uri ASC")
            ->add_post("queryparts[limit][perpage]", 25)
            ->add_post("queryparts[limit][regfrom]", 0)
            //->get()
            ->get_array()
        ;
        $r = $data["data"]["result"] ?? [];
        return $r;
    }

    public function get_top500()
    {
        $this->_load_endpoints();
        $this->_login();

        $d = date("w");
        $d = 5;
        switch ($d)
        {
            case 0: return $this->_get_top_wednesday();
            //lunes
            case 1: return $this->_get_top_monday();
            case 2: return $this->_get_top_tuesday();
            case 3: return $this->_get_top_wednesday();
            case 4: return $this->_get_top_thursday();
            case 5: return $this->_get_top_friday();
            //sÃ¡bado
            default: return $this->_get_top_monday();
        }
    }

    public function get(){}

    private function _test()
    {
        $url = $this->get_env("API_CURL_TEST");
        //$url = "http://www.cualesmiip.com/";
        $fetch = (new Fetch($url))
            ->is_debug()

            ->add_header("accept","application/json, text/plain, */*")

            ->add_header("accept-encoding","gzip, deflate, br")
            ->add_header("accept-language","es-ES,es;q=0.9,en;q=0.8,lt;q=0.7")

            ->add_header("cache-control","no-cache")

            //->add_header("content-length","3570")  //esto da nok
            //->add_header("content-type","multipart/form-data; boundary=----WebKitFormBoundaryMP5JCqhrtFhhHO3N") //esto da nok
            //->add_header("content-type","multipart/form-data") nok, no envia post

            ->add_header("origin", "https://ipblocker.theframework.es")
            ->add_header("pragma", "no-cache")
            ->add_header("referer", "https://ipblocker.theframework.es/")
            ->add_header("sec-fetch-dest","empty")
            ->add_header("sec-fetch-mode", "cors")
            ->add_header("sec-fetch-site", "same-site")
            ->add_header("user-agent","Mozilla/5.0 (Macintosh; Intel Mac OS X 11_1_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36")


            ->add_get("context","c3")
            ->add_get("schemainfo","db-security")

            ->add_post("apify-usertoken","UnVCd0w5TUQweHNzOWJ3RTUrK3poMTUyOVdKVTBmNmNENVh1MnFWL3pSUDE4UWZUUUg0Yy9HTHNiYzlDZklpeTQ3cE9LMFdObVRDUnlGZy96dkFCQTFtYUkvZnZuMGRFdGhSNWNwT3JheWt1WGdkYjB0emJwNnhNaXdBNW1DWFlOMTZYRzVMMk1rUlVUL00wS1YyUU1tb0FaTTFZNUtRY1dQd1RpSWR4dS8wPQ==")
            ->add_post("queryparts[table]","app_ip_request")
            ->add_post("queryparts[foundrows]",1)
            ->add_post("queryparts[fields][0]","r.id")
            ->add_post("queryparts[fields][1]","r.remote_ip")
            ->add_post("queryparts[joins][0]","LEFT JOIN app_ip_blacklist bl ON r.remote_ip = bl.remote_ip")
            ->add_post("queryparts[where][2]", "i.whois NOT LIKE '%sitelock.com%")
            ->add_post("queryparts[orderby][0]", "r.id DESC")
            ->add_post("queryparts[limit][perpage]", 50)
            ->add_post("queryparts[limit][regfrom]", 0)
            ->get();
        echo $fetch;
    }
}
